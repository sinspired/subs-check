# --- .goreleaser.yaml ---

version: 2

before:
  hooks:
    - go mod tidy

release:
  # 自动检测是否为预发布版本（例如，tag 中包含 -rc, -beta 等）
  prerelease: auto

# 构建配置
builds:
  - id: subs-check
    # 启用 CGO_ENABLED=0 来创建静态链接的二进制文件
    env:
      - CGO_ENABLED=0
    # 目标操作系统
    goos:
      - linux
      - windows
      - darwin
    # 目标 CPU 架构
    goarch:
      - amd64
      - arm64
      - arm
      - "386"
    # 为 arm 架构指定版本
    goarm:
      - "7"
    # 忽略不支持的平台组合
    ignore:
      - goos: darwin
        goarch: arm
      - goos: windows
        goarch: arm
      - goos: darwin
        goarch: "386"
    # 使用 Git 提交的时间戳作为模块的时间戳，确保可复现构建
    mod_timestamp: "{{ .CommitTimestamp }}"
    # 构建标志
    flags:
      - -trimpath
    # 链接器标志，用于注入版本信息并减小二进制文件大小
    ldflags:
      - -s -w -X main.Version={{ .Version }} -X main.CurrentCommit={{ .ShortCommit }}

# 归档配置（用于创建 .tar.gz 和 .zip 文件）
archives:
  - formats:
      - tar.gz
    # 自定义归档文件的命名模板
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else if eq .Arch "arm64" }}aarch64
      {{- else if eq .Arch "arm" }}armv7
      {{- else }}{{ .Arch }}{{ end }}
    # 针对 Windows 系统，覆盖打包格式为 zip
    format_overrides:
      - goos: windows
        formats: zip

dockers:
  - use: buildx
    goos: linux
    goarch: amd64
    dockerfile: Dockerfile.goreleaser
    image_templates:
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY }}:{{ .Version }}-amd64"
      - "{{ .Env.DOCKERHUB_USERNAME }}/{{ .ProjectName }}:{{ .Version }}-amd64"
    build_flag_templates: &build_flags
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - "--label=org.opencontainers.image.authors=sinspired"
      - "--label=org.opencontainers.image.vendor=sinspired"
      - "--label=org.opencontainers.image.description=高性能[测活、测速、媒体检测]代理检测筛选工具，支持100-1000高并发低占用运行，大幅减少数倍检测时间。"
      - "--label=org.opencontainers.image.keywords=subs-check,测活,测速,媒体检测,sub-store,节点管理,流媒体检测,测速节点,自动化,GoReleaser,Docker,best-sub,proxy,proxies,mihomo,v2ay,clash"
      - "--build-arg=VERSION={{.Version}}"
      - "--build-arg=GITHUB_SHA={{.FullCommit}}"

  - use: buildx
    goos: linux
    goarch: arm64
    dockerfile: Dockerfile.goreleaser
    image_templates:
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY }}:{{ .Version }}-arm64"
      - "{{ .Env.DOCKERHUB_USERNAME }}/{{ .ProjectName }}:{{ .Version }}-arm64"
    build_flag_templates: *build_flags

  - use: buildx
    goos: linux
    goarch: arm
    goarm: 7
    dockerfile: Dockerfile.goreleaser
    image_templates:
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY }}:{{ .Version }}-armv7"
      - "{{ .Env.DOCKERHUB_USERNAME }}/{{ .ProjectName }}:{{ .Version }}-armv7"
    build_flag_templates: *build_flags

docker_manifests:
  - name_template: "{{ .Env.DOCKERHUB_USERNAME }}/{{ .ProjectName }}:{{ .Version }}"
    image_templates:
      - "{{ .Env.DOCKERHUB_USERNAME }}/{{ .ProjectName }}:{{ .Version }}-amd64"
      - "{{ .Env.DOCKERHUB_USERNAME }}/{{ .ProjectName }}:{{ .Version }}-arm64"
      - "{{ .Env.DOCKERHUB_USERNAME }}/{{ .ProjectName }}:{{ .Version }}-armv7"
  - name_template: "{{ if not .Prerelease }}{{ .Env.DOCKERHUB_USERNAME }}/{{ .ProjectName }}:latest{{ end }}"
    image_templates:
      - "{{ .Env.DOCKERHUB_USERNAME }}/{{ .ProjectName }}:{{ .Version }}-amd64"
      - "{{ .Env.DOCKERHUB_USERNAME }}/{{ .ProjectName }}:{{ .Version }}-arm64"
      - "{{ .Env.DOCKERHUB_USERNAME }}/{{ .ProjectName }}:{{ .Version }}-armv7"

  - name_template: "ghcr.io/{{ .Env.GITHUB_REPOSITORY }}:{{ .Version }}"
    image_templates:
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY }}:{{ .Version }}-amd64"
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY }}:{{ .Version }}-arm64"
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY }}:{{ .Version }}-armv7"
  - name_template: "{{ if not .Prerelease }}ghcr.io/{{ .Env.GITHUB_REPOSITORY }}:latest{{ end }}"
    image_templates:
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY }}:{{ .Version }}-amd64"
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY }}:{{ .Version }}-arm64"
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY }}:{{ .Version }}-armv7"

# 更新日志（Changelog）的配置
changelog:
  sort: asc
  filters:
    # 排除不需要展示在 changelog 中的提交信息
    exclude:
      - "^docs:"
      - "^test:"
      - "^chore:"
      - Merge pull request
      - Merge branch
